package com.example.tp06;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;

import java.io.IOException;
import java.util.List;

@WebServlet("/rechercheEtudiants")
public class RechercheServlet extends HttpServlet {
    private SessionFactory sessionFactory;

    @Override
    public void init() {
        sessionFactory = new Configuration().configure("hibernate.cfg.xml").buildSessionFactory();
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // Récupérer les critères de recherche depuis les paramètres de requête
        String nom = request.getParameter("nom");
        String prenom = request.getParameter("prenom");
        String cours = request.getParameter("cours");

        // Ouvrir une session Hibernate
        Session session = sessionFactory.openSession();
        session.beginTransaction();

        // Construire la requête HQL avec des filtres dynamiques
        StringBuilder hql = new StringBuilder("FROM Etudiant WHERE 1=1");
        if (nom != null && !nom.isEmpty()) {
            hql.append(" AND nom = :nom");
        }
        if (prenom != null && !prenom.isEmpty()) {
            hql.append(" AND prenom = :prenom");
        }
        if (cours != null && !cours.isEmpty()) {
            hql.append(" AND cours.nom = :cours"); // Supposons qu'il y a une relation entre Etudiant et Cours
        }

        Query<Etudiant> query = session.createQuery(hql.toString(), Etudiant.class);

        // Assigner les paramètres de recherche aux variables dans la requête HQL
        if (nom != null && !nom.isEmpty()) {
            query.setParameter("nom", nom);
        }
        if (prenom != null && !prenom.isEmpty()) {
            query.setParameter("prenom", prenom);
        }
        if (cours != null && !cours.isEmpty()) {
            query.setParameter("cours", cours);
        }

        // Exécuter la requête et récupérer les résultats
        List<Etudiant> resultats = query.getResultList();

        // Fermer la session
        session.getTransaction().commit();
        session.close();

        // Envoyer les résultats à la page JSP
        request.setAttribute("resultats", resultats);
        request.getRequestDispatcher("resultatsRecherche.jsp").forward(request, response);
    }

    @Override
    public void destroy() {
        sessionFactory.close();
    }
}
